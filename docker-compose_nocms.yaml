version: "3.8"

services:
  front:
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    container_name: infoboard_front
    env_file:
      - envs/local/web/front/env.front
    depends_on:
      - db_default
      - db_public
      - es
      - redis

#  cms:
#    build: .
#    volumes:
#      - .:/code
#    ports:
#      - "8001:8001"
#    command: python manage.py runserver 0.0.0.0:8001
#    container_name: infoboard_cms
#    env_file:
#      - envs/local/web/cms/env.cms
#    depends_on:
#      - db_default
#      - db_public
#      - front
#      - es
#      - redis
#    deploy:
#      replicas: 0


  db_default:
    image: postgres:15.1-bullseye
    volumes:
      - postgres_data_default:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    container_name: infoboard_db_default
    environment:
      PGTZ: 'Europe/Warsaw'
      TZ: 'Europe/Warsaw'
    env_file:
      - envs/local/db/env.default

  db_public:
    image: postgres:15.1-bullseye
    volumes:
      - postgres_data_public:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    container_name: infoboard_db_public
    environment:
      PGTZ: 'Europe/Warsaw'
      TZ: 'Europe/Warsaw'
    env_file:
      - envs/local/db/env.public

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      - node.name=es
      - cluster.name=es-docker
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"


volumes:
  postgres_data_default:
  postgres_data_public:
  es_data: